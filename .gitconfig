
[color]
	ui = true
	diff = auto

[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = /home/cpennington/.gitignore.global
	attributesfile = /home/cpennington/.gitattributes.global
	editor = code --wait
	pager = less

[alias]
	st = status
	ci = commit
	br = branch
	co = checkout
	df = diff
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p

[user]
	name = Calen Pennington
	email = cale@edx.org
	signingkey = 1245071B

[branch]
	autosetuprebase = always

[push]
	default = current

[log]
	follow = true

[rebase]
	autosquash = true

[cleanup]
	ignore = "(master|release)"
    base = origin/master

[diff]
    tool = icdiff

[difftool]
    prompt = false

[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE

[difftool "icdiff"]
    cmd = /usr/local/bin/icdiff --line-numbers $LOCAL $REMOTE

[alias]
	fixup = !sh -c 'git rebase -i $(git merge-base HEAD ${1:-origin/master})' -
	oneoff = !sh -c 'git commit -m \"${1?Commit message required}\" --dry-run && git checkout -b cale/$(echo \"$1\" | sed \"s/ /-/g\" | tr \"[A-Z]\" \"[a-z]\") && git commit -m \"$1\" && git push' -
	patdiff = difftool --dir-diff --no-prompt --extcmd /home/cpennington/bin/git-difftool_patdiff.sh
	trip-travis = !sh -c 'git push -f origin ${1?Branch required}^:$1 && git push origin $1:$1' -
	fix-pr-chain = !sh -c 'git fixbranch $(git branch | sed "s/\\*//") && git push -f origin $(git branch --merged HEAD | sed "s/\\*//")' -
	irebase = imerge start --goal=rebase --first-parent
	prep-commit = stash -k -u
	todo = checklist
	setup-pull-requests = !sh -c 'git config --add remote.${1?Remote required}.fetch +refs/pull/*/head:refs/remotes/$1/pr/*' -
	cleanup = !sh -c 'git br -d $(git br --merged $(git config --get cleanup.base) | grep -v $(git config --get cleanup.ignore) | grep -v "\\*" | sed \"s%  %%\")'
	# Show branches, verbosely, sorted by last touch, with commit messages.
	brv = "!f() { git branch --sort=-creatordate --color=always --format='%(color:reset)%(creatordate:short) %(color:bold black)%(align:2,right)%(upstream:trackshort)%(end)%(color:nobold) %(align:40,left)%(color:yellow)%(refname:short)%(end) %(color:reset)%(contents:subject)'; }; f"

[tig]
	main-view = id:yes \
	author:full \
	date:relative \
	commit-title:graph=yes,refs=yes

[tig "bind"]
	main = = !git commit --fixup %(commit)
	diff = = !git commit --fixup %(commit)
	log = = !git commit --fixup %(commit)
	main = F !git fixup %(commit)
	stage = <Up> move-up
	stage = <Down> move-down
	stage = <Left> previous
	stage = <Right> next
	stage = <Enter> :/^@@

[init]
	templatedir = ~/.git-template
[diff]
	algorithm = patience
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
